{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/updateActions.ts","webpack:///./src/render.ts","webpack:///./src/gui.ts","webpack:///./res/shaders/vertexShader.glsl","webpack:///./res/shaders/fragmentShader.glsl","webpack:///./res/style/index.css","webpack:///./res/style/index.css?eeb8","webpack:///./src/index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","2","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","p","jsonpArray","window","oldJsonpFunction","bind","slice","THREE","updateColorMethod","material","colorMethod","uniforms","needsUpdate","updateMultiplier","multiplier","updateOpacity","opacity","updateNoiseStrength","noiseStrength","updateCameraPosition","camera","camPosX","camPosY","position","setX","setY","updateCameraZoom","zoom","Math","pow","E","updateProjectionMatrix","updateRendererSize","threeEnv","height","width","aspectRatio","left","right","top","bottom","renderer","setSize","updateTotalLines","totalLines","positions","Float32Array","positionsAttribute","setArray","colors","colorsAttribute","numbers","numbersAttribute","total","updateRenderer","renderContainer","antialias","newRenderer","WebGLRenderer","setPixelRatio","devicePixelRatio","innerWidth","innerHeight","firstChild","Error","replaceChild","domElement","updateActions_1","RenderController","stats","input","this","frameRequested","updateSources","Set","postRenderCallbacks","requestRender","source","postRenderCallback","_this","add","requestAnimationFrame","render","begin","update","scene","prepareNextRender","end","has","camZoom","clear","oldPostRenderCallbacks","forEach","callback","dat_gui_1","initGUI","renderController","gui","GUI","mathsFolder","addFolder","min","step","onChange","multiplierController","animate","setValue","multiplierIncrement","open","animationFolder","max","colorFolder","renderFolder","cameraFolder","camPosXController","camPosYController","camZoomController","addEventListener","e","shiftKey","deltaY","buttons","circleDiameterPx","clientHeight","clientWidth","movementFactor","movementX","movementY","content","options","hmr","transform","insertInto","undefined","locals","fragmentShader","vertexShader","Stats","Gui","render_1","onload","showPanel","document","body","appendChild","dom","standard","__assign","resetCamera","Scene","OrthographicCamera","setZ","lookAt","Vector3","geometry","BufferGeometry","ShaderMaterial","noise","Uint8Array","random","dataTexture","DataTexture","RGBAFormat","UnsignedByteType","UVMapping","RepeatWrapping","LinearFilter","getRandomNoiseTexture","blending","AdditiveBlending","depthTest","transparent","CustomBlending","blendEquation","AddEquation","blendSrc","SrcAlphaFactor","blendDst","OneFactor","BufferAttribute","addAttribute","mesh","LineSegments","frustumCulled","getThreeEnv","createElement","id","getRenderContainer"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([13,1,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {ColorMethod, ThreeEnv, RenderContainer} from \"./interfaces\";\nimport * as THREE from \"three\";\n\nexport function updateColorMethod(material: THREE.ShaderMaterial, colorMethod: ColorMethod) {\n  switch (colorMethod) {\n    case 'solid':\n      material.uniforms.colorMethod.value = 0;\n      break;\n    case 'faded':\n      material.uniforms.colorMethod.value = 1;\n      break;\n    case 'lengthOpacity':\n      material.uniforms.colorMethod.value = 2;\n      break;\n    case 'lengthHue':\n      material.uniforms.colorMethod.value = 3;\n      break;\n  }\n\n  material.needsUpdate = true;\n}\n\nexport function updateMultiplier(material: THREE.ShaderMaterial, multiplier: number) {\n  material.uniforms.multiplier.value = multiplier;\n  material.needsUpdate = true;\n}\n\nexport function updateOpacity(material: THREE.ShaderMaterial, opacity: number) {\n  material.uniforms.opacity.value = opacity;\n  material.needsUpdate = true;\n}\n\nexport function updateNoiseStrength(material: THREE.ShaderMaterial, noiseStrength: number) {\n  material.uniforms.noiseStrength.value = noiseStrength;\n  material.needsUpdate = true;\n}\n\nexport function updateCameraPosition(camera: THREE.OrthographicCamera, camPosX: number, camPosY: number) {\n  camera.position.setX(camPosX);\n  camera.position.setY(camPosY);\n}\n\nexport function updateCameraZoom(camera: THREE.OrthographicCamera, zoom: number) {\n  camera.zoom = Math.pow(Math.E, zoom - 1);\n  camera.updateProjectionMatrix();\n}\n\nexport function updateRendererSize(threeEnv: ThreeEnv, height: number, width: number) {\n  const aspectRatio = width / height;\n\n  const camera = threeEnv.camera;\n\n  if (aspectRatio > 1) {\n    camera.left = -aspectRatio;\n    camera.right = aspectRatio;\n    camera.top = 1;\n    camera.bottom = -1;\n  } else {\n    camera.left = -1;\n    camera.right = 1;\n    camera.top = Math.pow(aspectRatio, -1);\n    camera.bottom = -Math.pow(aspectRatio, -1);\n  }\n\n  threeEnv.camera.updateProjectionMatrix();\n\n  threeEnv.renderer.setSize(width, height);\n}\n\nexport function updateTotalLines(threeEnv: ThreeEnv, totalLines: number) {\n  const positions = new Float32Array(totalLines * 6);\n  threeEnv.positionsAttribute.setArray(positions);\n\n  const colors = new Float32Array(totalLines * 6);\n  threeEnv.colorsAttribute.setArray(colors);\n\n  const numbers = new Float32Array(totalLines * 2);\n  threeEnv.numbersAttribute.setArray(numbers);\n  for (let i = 0; i < totalLines * 2; i++) {\n    numbers[i] = i;\n  }\n  threeEnv.numbersAttribute.needsUpdate = true;\n\n  threeEnv.material.uniforms.total.value = totalLines;\n  threeEnv.material.needsUpdate = true;\n\n  threeEnv.positionsAttribute.needsUpdate = true;\n}\n\nexport function updateRenderer(threeEnv: ThreeEnv, renderContainer: RenderContainer, antialias: boolean) {\n  const newRenderer = new THREE.WebGLRenderer({antialias});\n  newRenderer.setPixelRatio(window.devicePixelRatio);\n  newRenderer.setSize(window.innerWidth, window.innerHeight);\n\n  if (renderContainer.firstChild) {\n    renderContainer.replaceChild(newRenderer.domElement, renderContainer.firstChild);\n  } else {\n    throw new Error(\"No Render Container\");\n  }\n\n  threeEnv.renderer = newRenderer;\n}","import THREE = require(\"three\");\n\nimport {ThreeEnv, Input, UpdateSource, RenderContainer} from \"./interfaces\";\nimport {\n  updateTotalLines,\n  updateCameraPosition,\n  updateOpacity,\n  updateCameraZoom,\n  updateMultiplier,\n  updateRendererSize,\n  updateColorMethod,\n  updateNoiseStrength,\n  updateRenderer\n} from \"./updateActions\";\n\n\nexport class RenderController {\n  private frameRequested = false;\n  private postRenderCallbacks: Set<() => void>;\n\n  private readonly updateSources: Set<UpdateSource>;\n  private readonly stats: Stats;\n  private readonly threeEnv: ThreeEnv;\n  private readonly input: Input;\n  private readonly renderContainer: RenderContainer;\n\n  constructor(stats: Stats, threeEnv: ThreeEnv, input: Input, renderContainer: RenderContainer) {\n    this.stats = stats;\n    this.threeEnv = threeEnv;\n    this.input = input;\n    this.renderContainer = renderContainer;\n    this.updateSources = new Set();\n    this.postRenderCallbacks = new Set();\n  }\n\n  public requestRender(source: UpdateSource, postRenderCallback?: () => void) {\n    this.updateSources.add(source);\n\n    if (!this.frameRequested) {\n      this.frameRequested = true;\n      requestAnimationFrame(() => this.render());\n    }\n\n    if (postRenderCallback) {\n      this.postRenderCallbacks.add(postRenderCallback);\n    }\n  }\n\n  private render() {\n    this.stats.begin();\n\n    this.frameRequested = false;\n\n    this.update();\n\n    this.threeEnv.renderer.render(this.threeEnv.scene, this.threeEnv.camera);\n\n    this.prepareNextRender();\n\n    this.stats.end();\n  }\n\n  private update() {\n    if (this.updateSources.has(\"init\")) {\n      updateRenderer(this.threeEnv, this.renderContainer, this.input.antialias);\n      updateRendererSize(this.threeEnv, window.innerHeight, window.innerWidth);\n      updateTotalLines(this.threeEnv, this.input.totalLines);\n      updateMultiplier(this.threeEnv.material, this.input.multiplier);\n      updateColorMethod(this.threeEnv.material, this.input.colorMethod);\n      updateOpacity(this.threeEnv.material, this.input.opacity);\n      updateCameraPosition(this.threeEnv.camera, this.input.camPosX, this.input.camPosY);\n      updateCameraZoom(this.threeEnv.camera, this.input.camZoom);\n    }\n\n    if (this.updateSources.has(\"antialias\")) {\n      updateRenderer(this.threeEnv, this.renderContainer, this.input.antialias);\n    }\n\n    if (this.updateSources.has(\"totalLines\")) {\n      updateTotalLines(this.threeEnv, this.input.totalLines);\n    }\n\n    if (this.updateSources.has(\"multiplier\")) {\n      updateMultiplier(this.threeEnv.material, this.input.multiplier);\n    }\n\n    if (this.updateSources.has(\"colorMethod\")) {\n      updateColorMethod(this.threeEnv.material, this.input.colorMethod);\n    }\n\n    if (this.updateSources.has(\"noiseStrength\")) {\n      updateNoiseStrength(this.threeEnv.material, this.input.noiseStrength);\n    }\n\n    if (this.updateSources.has(\"camPosX\") ||\n      this.updateSources.has(\"camPosY\")) {\n      updateCameraPosition(this.threeEnv.camera, this.input.camPosX, this.input.camPosY);\n    }\n\n    if (this.updateSources.has(\"camZoom\")) {\n      updateCameraZoom(this.threeEnv.camera, this.input.camZoom);\n    }\n\n    if (this.updateSources.has(\"opacity\")) {\n      updateOpacity(this.threeEnv.material, this.input.opacity);\n    }\n\n    if (this.updateSources.has(\"resize\")) {\n      updateRendererSize(this.threeEnv, window.innerHeight, window.innerWidth);\n    }\n  }\n\n  private prepareNextRender() {\n    this.updateSources.clear();\n\n    // clear postRenderCallbacks before executing the previous callbacks\n    // this allows renderCallbacks to requestRender with callbacks\n    const oldPostRenderCallbacks = this.postRenderCallbacks;\n\n    this.postRenderCallbacks = new Set();\n\n    oldPostRenderCallbacks.forEach(callback => callback());\n  }\n}\n","import {RenderController} from \"./render\";\nimport {GUI} from \"dat.gui\";\nimport {Input, ColorMethod, UpdateSource, RenderContainer} from \"./interfaces\";\n\nexport function initGUI(input: Input, renderController: RenderController, renderContainer: RenderContainer) {\n  let gui = new GUI();\n\n  const totalLines: UpdateSource = \"totalLines\";\n  const multiplier: UpdateSource = \"multiplier\";\n  const animate: UpdateSource = \"animate\";\n  const multiplierIncrement: UpdateSource = \"multiplierIncrement\";\n  const opacity: UpdateSource = \"opacity\";\n  const colorMethod: UpdateSource = \"colorMethod\";\n  const noiseStrength: UpdateSource = \"noiseStrength\";\n  const antialias: UpdateSource = \"antialias\";\n  const camPosX: UpdateSource = \"camPosX\";\n  const camPosY: UpdateSource = \"camPosY\";\n  const camZoom: UpdateSource = \"camZoom\";\n  const resetCamera: UpdateSource = \"resetCamera\";\n\n  const mathsFolder = gui.addFolder(\"Maths\");\n  mathsFolder.add(input, totalLines).min(0).step(1)\n    .onChange(() => renderController.requestRender(totalLines));\n\n  const multiplierController = mathsFolder.add(input, multiplier).step(1e-06);\n\n  function postRenderCallback() {\n    if (input.animate) {\n      multiplierController.setValue(input.multiplier + Math.pow(input.multiplierIncrement, 3));\n    }\n  }\n\n  multiplierController.onChange(\n    () => renderController.requestRender(multiplier, postRenderCallback)\n  );\n  mathsFolder.open();\n\n  const animationFolder = gui.addFolder(\"Animation\");\n  animationFolder.add(input, animate)\n    .onChange(() => renderController.requestRender(animate, postRenderCallback));\n  animationFolder.add(input, multiplierIncrement).min(-1).max(1).step(0.001)\n    .onChange(() => renderController.requestRender(multiplierIncrement));\n  animationFolder.open();\n\n  const colorFolder = gui.addFolder(\"Color\");\n  colorFolder.add(input, opacity, 0, 1).step(0.001)\n    .onChange(() => renderController.requestRender(opacity));\n  const colorMethods: Array<ColorMethod> = ['solid', 'faded', 'lengthOpacity', 'lengthHue'];\n  colorFolder.add(input, colorMethod, colorMethods)\n    .onChange(() => renderController.requestRender(colorMethod));\n  colorFolder.open();\n\n  const renderFolder = gui.addFolder(\"Render\");\n  renderFolder.add(input, noiseStrength, 0, 255).step(0.5)\n    .onChange(() => renderController.requestRender(noiseStrength));\n  renderFolder.add(input, antialias)\n    .onChange(() => renderController.requestRender(antialias));\n  renderFolder.open();\n\n  const cameraFolder = gui.addFolder(\"Camera\");\n  const camPosXController = cameraFolder.add(input, camPosX, -1, 1).step(1e-06);\n  camPosXController.onChange(() => renderController.requestRender(camPosX));\n  const camPosYController = cameraFolder.add(input, camPosY, -1, 1).step(1e-06);\n  camPosYController.onChange(() => renderController.requestRender(camPosY));\n  const camZoomController = cameraFolder.add(input, camZoom, 1).step(0.01);\n  camZoomController.onChange(() => renderController.requestRender(camZoom));\n  cameraFolder.add(input, resetCamera)\n    .onChange(() => {\n      camPosXController.setValue(0);\n      camPosYController.setValue(0);\n      camZoomController.setValue(1);\n    });\n  cameraFolder.open();\n\n\n  renderContainer.addEventListener(\"wheel\", (e: WheelEvent) => {\n    if (e.shiftKey) {\n      camZoomController.setValue(input.camZoom - e.deltaY / 1000);\n    }\n  });\n\n  renderContainer.addEventListener(\"mousemove\", (e: MouseEvent) => {\n    if (e.buttons === 1 && e.shiftKey) {\n      const circleDiameterPx = Math.min(renderContainer.clientHeight, renderContainer.clientWidth);\n\n      const realZoom = Math.pow(Math.E, input.camZoom - 1);\n\n      const movementFactor = realZoom * circleDiameterPx / 2;\n\n      camPosXController.setValue(input.camPosX - e.movementX / movementFactor);\n      camPosYController.setValue(input.camPosY + e.movementY / movementFactor);\n    }\n  })\n}\n","module.exports = \"uniform float multiplier;\\nuniform float total;\\nuniform int colorMethod;\\n\\nattribute float number;\\nattribute vec3 color;\\n\\nvarying vec3 vColor;\\nvarying float vLinePosition;\\n\\n#define PI 3.1415926535897932384626433832795\\n\\nbool isStartCord(float number);\\nvec2 getCircleCord(float number, float total);\\nvec3 hsv2rgb(vec3 c);\\n\\n\\nvoid main() {\\n  vec3 newPosition = position;\\n\\n  bool startCord = isStartCord(number);\\n\\n  if (startCord) {\\n    newPosition.xy =  getCircleCord(number / 2.0, total);\\n    vLinePosition = 1.0;\\n  } else {\\n    newPosition.xy =  getCircleCord( floor(number / 2.0) * multiplier, total);\\n    vLinePosition = 0.0;\\n  }\\n\\n  float theta = 2.0 * PI * floor(number / 2.0) * (multiplier - 1.0) / total;\\n  float distance = abs(sin(theta / 2.0));\\n\\n  gl_Position = projectionMatrix *\\n                modelViewMatrix *\\n                vec4(newPosition,1.0);\\n\\n  // colorMethod switch\\n  if (colorMethod == 0) {\\n    // solid\\n    vColor.xyz = vec3(1.0);\\n  } else if (colorMethod == 1) {\\n    // faded\\n    if (startCord) {\\n      vColor.xyz = vec3(1.0);\\n    } else {\\n      vColor.xyz = vec3(0.0);\\n    }\\n  } else if (colorMethod == 2) {\\n    // lengthOpacity\\n    vColor.xyz = vec3(1.0 - distance);\\n  } else if (colorMethod == 3) {\\n    // lengthHue\\n    vColor.xyz = vec3(hsv2rgb(vec3(distance, 1.0, 1.0)));\\n  } else {\\n    // fallback error red\\n    vColor.xyz = vec3(1.0, 0.0, 0.0);\\n  }\\n}\\n\\nbool isStartCord(float number) {\\n  return mod(number, 2.0) < 0.01;\\n}\\n\\nvec2 getCircleCord(float number, float total) {\\n    float normalized = 2.0 * PI * number / total;\\n    return vec2(cos(normalized), sin(normalized));\\n}\\n\\n// source: http://gamedev.stackexchange.com/a/59808\\nvec3 hsv2rgb(vec3 c)\\n{\\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\"","module.exports = \"uniform float opacity;\\nuniform sampler2D noise;\\nuniform float noiseStrength;\\n\\nvarying vec3 vColor;\\nvarying float vLinePosition;\\n\\nvoid main() {\\n  gl_FragColor = vec4(vColor, opacity);\\n\\n  float noise = vec4(texture2D(noise, vec2(vLinePosition * 1024.0, 0.5))).r;\\n\\n  gl_FragColor.rgb += mix(-noiseStrength/255.0, noiseStrength/255.0, noise);\\n}\"","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"canvas {\\n    display: block;\\n}\\nbody {\\n    margin: 0;\\n}\\n\\n#render-container {\\n  user-select: none;\\n  cursor: default;\\n}\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../node_modules/css-loader/index.js!./index.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./index.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./index.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// webpack\nimport \"../res/style/index.css\";\nimport * as fragmentShader from \"../res/shaders/fragmentShader.glsl\";\nimport * as vertexShader from \"../res/shaders/vertexShader.glsl\";\n// npm\nimport * as THREE from \"three\";\nimport Stats = require(\"stats.js\");\n// own\nimport * as Gui from \"./gui\";\nimport {RenderController} from \"./render\"\nimport {ThreeEnv, Input, RenderContainer} from \"./interfaces\";\n\n\nfunction getInitialInput(): Input {\n  const standard: Input = {\n    totalLines: 200,\n    multiplier: 2,\n    animate: false,\n    multiplierIncrement: 0.2,\n    opacity: 1,\n    colorMethod: 'lengthHue',\n    noiseStrength: 0.5,\n    antialias: false,\n    camPosX: 0,\n    camPosY: 0,\n    camZoom: 1,\n    resetCamera: () => {\n    }\n  };\n\n  const benchmark: Input = {\n    ...standard,\n    totalLines: 250000,\n    multiplier: 100000,\n    multiplierIncrement: 1,\n    opacity: 0.005,\n    colorMethod: 'faded',\n  };\n\n  const debug: Input = {\n    ...standard,\n    totalLines: 10,\n    multiplier: 2,\n    multiplierIncrement: 0.005,\n    colorMethod: 'faded',\n  };\n\n  const debugBlending: Input = {\n    ...standard,\n    totalLines: 10000,\n    opacity: 0.05,\n  };\n\n  const initialInputs = {\n    standard,\n    benchmark,\n    debug,\n    debugBlending\n  };\n\n  return initialInputs.standard;\n}\n\n\nfunction init() {\n  const stats = new Stats();\n  stats.showPanel(1);\n  document.body.appendChild(stats.dom);\n\n  const input = getInitialInput();\n\n  const threeEnv = getThreeEnv();\n\n  const renderContainer = getRenderContainer(threeEnv.renderer);\n\n  const renderController = new RenderController(stats, threeEnv, input, renderContainer);\n\n  window.addEventListener('resize', () => renderController.requestRender(\"resize\"));\n\n  Gui.initGUI(input, renderController, renderContainer);\n\n  renderController.requestRender(\"init\");\n}\n\nfunction getRenderContainer(renderer: THREE.WebGLRenderer): RenderContainer {\n  const renderContainer = document.createElement(\"div\");\n  renderContainer.id = \"render-container\";\n  document.body.appendChild(renderContainer);\n\n  renderContainer.appendChild(renderer.domElement);\n\n  return renderContainer;\n}\n\n// TODO: try other kinds of noises\nfunction getRandomNoiseTexture() {\n  const width = 1024;\n  const data = new Uint8Array(4 * width);\n  for (let i = 0; i < width * 4; i++) {\n    data[i] = Math.random() * 255 | 0;\n  }\n\n  const dataTexture = new THREE.DataTexture(data, width, 1, THREE.RGBAFormat, THREE.UnsignedByteType, THREE.UVMapping,\n    THREE.RepeatWrapping, THREE.RepeatWrapping, THREE.LinearFilter, THREE.LinearFilter);\n  dataTexture.needsUpdate = true;\n  return dataTexture;\n}\n\n/**\n * Static initialization of render environment\n */\nfunction getThreeEnv(): ThreeEnv {\n  const renderer = new THREE.WebGLRenderer({antialias: true});\n  renderer.setPixelRatio(window.devicePixelRatio);\n  renderer.setSize(window.innerWidth, window.innerHeight);\n\n\n  const scene = new THREE.Scene();\n\n  const camera = new THREE.OrthographicCamera(-1, 1, 1, -1);\n  camera.position.setZ(1);\n  camera.lookAt(new THREE.Vector3(0, 0, 0));\n\n  const geometry = new THREE.BufferGeometry();\n  const material = new THREE.ShaderMaterial({\n    uniforms: {\n      multiplier: {value: 2},\n      total: {value: 10},\n      opacity: {value: 1},\n      colorMethod: {value: 0},\n      noise: {value: getRandomNoiseTexture()},\n      noiseStrength: {value: 1}\n    },\n    vertexShader: vertexShader,\n    fragmentShader: fragmentShader,\n    blending: THREE.AdditiveBlending,\n    depthTest: false,\n    transparent: true\n  });\n\n  material.blending = THREE.CustomBlending;\n  material.blendEquation = THREE.AddEquation;\n  material.blendSrc = THREE.SrcAlphaFactor;\n  material.blendDst = <any> THREE.OneFactor;\n\n  const positions = new Float32Array(0);\n  const positionsAttribute = new THREE.BufferAttribute(positions, 3);\n  geometry.addAttribute('position', positionsAttribute);\n\n  const colors = new Float32Array(0);\n  const colorsAttribute = new THREE.BufferAttribute(colors, 3);\n  geometry.addAttribute('color', colorsAttribute);\n\n  const numbers = new Float32Array(0);\n  const numbersAttribute = new THREE.BufferAttribute(numbers, 1);\n  geometry.addAttribute('number', numbersAttribute);\n\n\n  const mesh = new THREE.LineSegments(geometry, material);\n  // TODO: find out why this is needed with OrthographicCamera and zoom\n  mesh.frustumCulled = false;\n\n  scene.add(mesh);\n\n  return {\n    renderer,\n    scene,\n    camera,\n    geometry,\n    material,\n    positionsAttribute,\n    colorsAttribute,\n    numbersAttribute\n  };\n}\n\nwindow.onload = init;"],"sourceRoot":""}